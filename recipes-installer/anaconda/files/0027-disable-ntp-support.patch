From 0fad2179c0b760157abcf2ae5ceca7c8f396fadd Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Sat, 29 Jun 2019 12:13:28 +0800
Subject: [PATCH] disable ntp support

The upstream RHEL7 use chrony.service to support ntp,
it did not exist in oe-core, so remove it.

Do not support NTP, here are the reasons:
- For systemd based, it already had NTP supported,
  another ntp will cause confliction.

- We also need to consider the situation of sysvinit
  based system, it requires a ntp package to be
  installed.

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>

Rebase for anaconda 34.

Signed-off-by: Kai Kang <kai.kang@windriver.com>
---
 pyanaconda/installation.py                    |   2 +-
 pyanaconda/ui/gui/spokes/datetime_spoke.glade |  74 ------------------
 pyanaconda/ui/gui/spokes/datetime_spoke.py    | 104 +-------------------------
 3 files changed, 3 insertions(+), 177 deletions(-)

diff --git a/pyanaconda/installation.py b/pyanaconda/installation.py
index 95f67a43a..2458bca63 100644
--- a/pyanaconda/installation.py
+++ b/pyanaconda/installation.py
@@ -100,7 +100,7 @@ def _prepare_configuration(payload, ksdata):
 
     # add installation tasks for the Timezone DBus module
     # run these tasks before tasks of the Services module
-    if is_module_available(TIMEZONE):
+    if False:
         timezone_proxy = TIMEZONE.get_proxy()
         timezone_dbus_tasks = timezone_proxy.InstallWithTasks()
         os_config.append_dbus_tasks(TIMEZONE, timezone_dbus_tasks)
diff --git a/pyanaconda/ui/gui/spokes/datetime_spoke.glade b/pyanaconda/ui/gui/spokes/datetime_spoke.glade
index 3ebc12a44..9ce88bc70 100644
--- a/pyanaconda/ui/gui/spokes/datetime_spoke.glade
+++ b/pyanaconda/ui/gui/spokes/datetime_spoke.glade
@@ -494,80 +494,6 @@
                                 <property name="position">3</property>
                               </packing>
                             </child>
-                            <child>
-                              <object class="GtkAlignment" id="alignment4">
-                                <property name="visible">True</property>
-                                <property name="can_focus">False</property>
-                                <property name="xalign">1</property>
-                                <property name="xscale">0.20000000298023224</property>
-                                <property name="right_padding">24</property>
-                                <child>
-                                  <object class="GtkBox" id="box6">
-                                    <property name="visible">True</property>
-                                    <property name="can_focus">False</property>
-                                    <property name="halign">end</property>
-                                    <child>
-                                      <object class="GtkLabel" id="networkTimeLabel">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">False</property>
-                                        <property name="label" translatable="yes" context="GUI|Date and Time">_Network Time</property>
-                                        <property name="use_underline">True</property>
-                                        <property name="mnemonic_widget">networkTimeSwitch</property>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="padding">3</property>
-                                        <property name="position">0</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <object class="GtkSwitch" id="networkTimeSwitch">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">True</property>
-                                        <signal name="notify::active" handler="on_ntp_switched" swapped="no"/>
-                                        <child internal-child="accessible">
-                                          <object class="AtkObject" id="networkTimeSwitch-atkobject">
-                                            <property name="AtkObject::accessible-name" translatable="yes">Use Network Time</property>
-                                          </object>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="padding">1</property>
-                                        <property name="position">1</property>
-                                      </packing>
-                                    </child>
-                                    <child>
-                                      <object class="GtkButton" id="ntpConfigButton">
-                                        <property name="visible">True</property>
-                                        <property name="can_focus">True</property>
-                                        <property name="receives_default">True</property>
-                                        <property name="image">configImage</property>
-                                        <signal name="clicked" handler="on_ntp_config_clicked" swapped="no"/>
-                                        <child internal-child="accessible">
-                                          <object class="AtkObject" id="ntpConfigButton-atkobject">
-                                            <property name="AtkObject::accessible-name" translatable="yes">Configure NTP</property>
-                                          </object>
-                                        </child>
-                                      </object>
-                                      <packing>
-                                        <property name="expand">False</property>
-                                        <property name="fill">True</property>
-                                        <property name="padding">1</property>
-                                        <property name="position">2</property>
-                                      </packing>
-                                    </child>
-                                  </object>
-                                </child>
-                              </object>
-                              <packing>
-                                <property name="expand">True</property>
-                                <property name="fill">True</property>
-                                <property name="position">4</property>
-                              </packing>
-                            </child>
                           </object>
                         </child>
                       </object>
diff --git a/pyanaconda/ui/gui/spokes/datetime_spoke.py b/pyanaconda/ui/gui/spokes/datetime_spoke.py
index 4054633bc..82d2a4394 100644
--- a/pyanaconda/ui/gui/spokes/datetime_spoke.py
+++ b/pyanaconda/ui/gui/spokes/datetime_spoke.py
@@ -490,8 +490,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
         self._year_format, suffix = formats[widgets.index(year_box)]
         year_label.set_text(suffix)
 
-        self._ntpSwitch = self.builder.get_object("networkTimeSwitch")
-
         self._regions_zones = get_all_regions_and_timezones()
 
         # Set the initial sensitivity of the AM/PM toggle based on the time-type selected
@@ -577,8 +575,8 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
         if not region or not city:
             return
 
-        self._timezone_module.SetTimezone(region + "/" + city)
-        self._timezone_module.SetNTPEnabled(self._ntpSwitch.get_active())
+        #self._timezone_module.SetTimezone(region + "/" + city)
+        self._timezone_module.SetNTPEnabled(False)
 
         self._kickstarted = False
 
@@ -619,36 +617,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
 
         self._update_datetime()
 
-        # update the ntp configuration
-        self._ntp_servers = TimeSourceData.from_structure_list(
-            self._timezone_module.TimeSources
-        )
-
-        if not self._ntp_servers:
-            try:
-                self._ntp_servers = ntp.get_servers_from_config()
-            except ntp.NTPconfigError:
-                log.warning("Failed to load NTP servers configuration")
-
-        self._ntp_servers_states = NTPServerStatusCache()
-        self._ntp_servers_states.changed.connect(self._update_ntp_server_warning)
-
-        has_active_network = self._network_module.Connected
-
-        if not has_active_network:
-            self._show_no_network_warning()
-        else:
-            self.clear_info()
-
-            for server in self._ntp_servers:
-                self._ntp_servers_states.check_status(server)
-
-        if conf.system.can_set_time_synchronization:
-            ntp_working = has_active_network and util.service_running(NTP_SERVICE)
-        else:
-            ntp_working = self._timezone_module.NTPEnabled
-
-        self._ntpSwitch.set_active(ntp_working)
 
     @async_action_wait
     def _set_timezone(self, timezone):
@@ -1111,74 +1079,6 @@ class DatetimeSpoke(FirstbootSpokeMixIn, NormalSpoke):
 
         return None
 
-    def _show_no_network_warning(self):
-        self.set_warning(_("You need to set up networking first if you "
-                           "want to use NTP"))
-
-    def _show_no_ntp_server_warning(self):
-        self.set_warning(_("You have no working NTP server configured"))
-
-    def on_ntp_switched(self, switch, *args):
-        if switch.get_active():
-            #turned ON
-            if not conf.system.can_set_time_synchronization:
-                #cannot touch runtime system, not much to do here
-                return
-
-            if not self._network_module.Connected:
-                self._show_no_network_warning()
-                switch.set_active(False)
-                return
-            else:
-                self._update_ntp_server_warning()
-
-            ret = util.start_service(NTP_SERVICE)
-            self._set_date_time_setting_sensitive(False)
-
-            #if starting chronyd failed and chronyd is not running,
-            #set switch back to OFF
-            if (ret != 0) and not util.service_running(NTP_SERVICE):
-                switch.set_active(False)
-
-        else:
-            #turned OFF
-            if not conf.system.can_set_time_synchronization:
-                #cannot touch runtime system, nothing to do here
-                return
-
-            self._set_date_time_setting_sensitive(True)
-            ret = util.stop_service(NTP_SERVICE)
-
-            #if stopping chronyd failed and chronyd is running,
-            #set switch back to ON
-            if (ret != 0) and util.service_running(NTP_SERVICE):
-                switch.set_active(True)
-
-            self.clear_info()
-
-    def on_ntp_config_clicked(self, *args):
-        servers = copy.deepcopy(self._ntp_servers)
-        states = self._ntp_servers_states
-
-        # Temporarily disconnect the update callback.
-        states.changed.disconnect(self._update_ntp_server_warning)
-
-        dialog = NTPConfigDialog(self.data, servers, states)
-        dialog.refresh()
-
-        with self.main_window.enlightbox(dialog.window):
-            response = dialog.run()
-
-        # Connect the update callback again.
-        states.changed.connect(self._update_ntp_server_warning)
-
-        if response == 1:
-            self._timezone_module.SetTimeSources(
-                TimeSourceData.to_structure_list(servers)
-            )
-
-            self._ntp_servers = servers
-            self._update_ntp_server_warning()
 
     def _update_ntp_server_warning(self):
         """Update the warning about working NTP servers."""
-- 
2.7.4

